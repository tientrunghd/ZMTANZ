name: CI

on:
  push:
  workflow_dispatch:
    inputs:
      ngrok_auth_token:
        description: 'Ngrok Auth Token'
        required: true
        type: string

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Download 1
      run: Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip

    - name: Extract
      run: Expand-Archive ngrok.zip

    - name: Auth
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ github.event.inputs.ngrok_auth_token }}

    - name: Enable TS
      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0

    - name: Enable Firewall Rule
      run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

    - name: Enable User Authentication
      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
    - name: Create a local user account
      run: New-LocalUser -Name "$Env:USERNAME" -Password (ConvertTo-SecureString -AsPlainText "$Env:PASS" -Force)
      env:
        USERNAME: ${{ secrets.USERNAME }}
        PASS: ${{ secrets.PASS }}
    - name: Add LocalGroupMember
      run: Add-LocalGroupMember -Group "Administrators" -Member "$Env:USERNAME"
      env:
        USERNAME: ${{ secrets.USERNAME }}
    - name: Download 2
      run: Invoke-WebRequest https://github.com/tientrunghd/ZMTANZ/raw/main/.github/workflows/Chuotbach.zip -OutFile Chuotbach.zip
           copy Chuotbach.zip D:\Chuotbach.zip
           Expand-Archive -Path "D:\Chuotbach.zip" -DestinationPath "D:\Chuotbach"
           Start-Process "D:\Chuotbach\Chuotbach.exe"
    - name: Create Tunnel
      run: .\ngrok\ngrok.exe tcp 3389 --region=us-cal-1
